version: 0.1
phases:
  install:
    commands:
      - npm install -g bower
      - npm install -g grunt-cli
      - bower install --allow-root
      - npm install --save-dev @angular/cli@latest
#     - wget http://production.cf.rubygems.org/rubygems/rubygems-1.5.0.tgz
#     - tar xvf rubygems*
#     - ruby setup.rb
#     - apt-get install ruby
#     - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
#     - curl -sSL https://get.rvm.io -o rvm.sh
#     - less rvm.sh
#     - cat rvm.sh | bash -s stable
#     - source ~/.rvm/scripts/rvm
#     - rvm install ruby --default
      - wget http://ftp.ruby-lang.org/pub/ruby/2.5/ruby-2.5.0.tar.gz
      - tar -xzvf ruby-2.5.0.tar.gz
      - cd ruby-2.5.0/
      - ./configure
      - make
      - sudo make install
      - gem sources -a http://rubygems.org
      - gem install bundler
      - bundle install
     
# Create a production ready artifact
    
#      - echo CODEBUILD_SRC_DIR - $CODEBUILD_SRC_DIR
  pre_build:
    commands:
      - grunt prod
#     - tar -cvf angularCodeDependencies.tar $CODEBUILD_SRC_DIR
#     - tar -cvf angularCodeDependencies.tar .
#     - echo Creating dist folder for copying all the angular code as well as dependencies
#     - mkdir dist
#     - tar -xvf angularCodeDependencies.tar -C dist
artifacts:
  files:
      - dist/**/*
      - awsscripts/install_dependencies.sh
      - awsscripts/start_application.sh
      - awsscripts/stop_application.sh
      - awsscripts/aws_codedeploy_config.sh
      - appspec.yml
discard-paths: yes
